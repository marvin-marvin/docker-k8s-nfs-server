apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "9"
    description: LAN nfs-server
  creationTimestamp: null
  generation: 1
  labels:
    k8s-app: nfs-server
    location: lan
  name: timemachine
  selfLink: /apis/extensions/v1beta1/namespaces/lan/deployments/nfs-server
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: nfs-server
      location: lan
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        description: LAN nfs-server
      creationTimestamp: null
      labels:
        k8s-app: nfs-server
        location: lan
      name: nfs-server
    spec:
      containers:
      - env:
        - name: tz
          value: "Europe/Berlin"
        image: marvinmarvin/docker-k8s-nfs-server
        imagePullPolicy: Always
        name: nfs-server
        ports:
        - containerPort: 2049
          name: nfs1
          protocol: TCP
        - containerPort: 20048
          name: nfs2
          protocol: TCP
        volumeMounts:
        - mountPath: /exports
          name: k8s-cfg-nfs-server
        - mountPath: /usr2
          name: k8s-cfg-nfs-server-usr2
        resources: {}
        securityContext:
          privileged: false
          procMount: Default
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      volumes:
      - name: k8s-cfg-nfs-server
        hostPath:
          path: /root/k8s-cfg/nfs-server
          type: Directory
      - name: k8s-cfg-nfs-server-usr2
        hostPath:
          path: /usr2
          type: Directory
      dnsPolicy: ClusterFirst
      hostNetwork: false
      nodeSelector:
        nodetype: nuc
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    metallb.universe.tf/address-pool: lan-loadbalancer
    metallb.universe.tf/allow-shared-ip: lan-loadbalancer
  labels:
    k8s-app: nfs-server
  name: nfs-server-100
  namespace: lan
spec:
  externalTrafficPolicy: Cluster
  loadBalancerIP: 192.168.1.100
  ports:
  - name: nfs1       
    port: 2049
    protocol: TCP
    targetPort: nfs1       
  - name: nfs2
    port: 20048
    protocol: TCP
    targetPort: nfs2
  selector:
    k8s-app: nfs-server
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    metallb.universe.tf/address-pool: lan-loadbalancer
    metallb.universe.tf/allow-shared-ip: lan-loadbalancer
  labels:
    k8s-app: nfs-server
  name: nfs-server-250
  namespace: lan
spec:
  externalTrafficPolicy: Cluster
  loadBalancerIP: 192.168.1.250
  ports:
  - name: nfs1
    port: 2049
    protocol: TCP
    targetPort: nfs1
  - name: nfs2 
    port: 20048
    protocol: TCP
    targetPort: nfs2
  selector:
    k8s-app: nfs-server
  sessionAffinity: None
  type: LoadBalancer
