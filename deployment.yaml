apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    description: WAN nfs-server
  labels:
    k8s-app: nfs-server
    location: wan
  name: nfs-server
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: nfs-server
      location: wan
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        description: WAN nfs-server
      labels:
        k8s-app: nfs-server
        location: wan
      name: nfs-server
    spec:
      containers:
      - env:
        - name: tz
          value: "UTC"
        image: marvinmarvin/docker-k8s-nfs-server
        imagePullPolicy: Always
        name: nfs-server
        ports:
        - containerPort: 2049
          name: nfs1
          protocol: TCP
        - containerPort: 20048
          name: nfs2
          protocol: TCP
        volumeMounts:
#        - mountPath: /exports
#          name: k8s-cfg-nfs-server
#        - mountPath: /usr2
#          name: k8s-cfg-nfs-server-usr2
        - mountPath: /exports
          name: k8s-nfs-server
        resources: {}
        securityContext:
          privileged: true
          procMount: Default
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      volumes:
#      - name: k8s-cfg-nfs-server
#        hostPath:
#          path: /root/k8s-cfg/nfs-server
#          type: Directory
      - name: k8s-nfs-server
        hostPath:
          path: /root/k8s/PVC
          type: Directory
      dnsPolicy: ClusterFirst
      hostNetwork: true
      nodeSelector:
        kubernetes.io/hostname: vps-ger-nue-kube-1
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
status: {}
---
#apiVersion: v1
#kind: Service
#metadata:
#  annotations:
#    metallb.universe.tf/address-pool: lan-loadbalancer
#    metallb.universe.tf/allow-shared-ip: lan-loadbalancer
#  labels:
#    k8s-app: nfs-server
#  name: nfs-server-100
#  namespace: lan
#spec:
#  externalTrafficPolicy: Cluster
#  loadBalancerIP: 192.168.1.100
#  ports:
#  - name: nfs1       
#    port: 2049
#    protocol: TCP
#    targetPort: nfs1       
#  - name: nfs2
#    port: 20048
#    protocol: TCP
#    targetPort: nfs2
#  selector:
#    k8s-app: nfs-server
#  sessionAffinity: None
#  type: LoadBalancer

apiVersion: v1
kind: Service                                                                                                                                                                                                                                                                                                      
metadata:                                                                                                                                                        
  name: nfs-service
  labels:
    k8s-app: nfs-server
  name: nfs-server                                                                                                                                              
spec:                                                                                                                                                            
  selector:
    k8s-app: nfs-server                                                                                                                                                   
  ports:                                                                                                                                                         
  - name: nfs1       
    port: 2049
    protocol: TCP
    targetPort: nfs1       
  - name: nfs2
    port: 20048
    protocol: TCP
    targetPort: nfs2
  selector:
    k8s-app: nfs-server
  sessionAffinity: None    
    
    
    
    
    